{"version":3,"file":"js/admin.js","mappings":"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","sources":["webpack://glimfse/external window \"React\"","webpack://glimfse/webpack/bootstrap","webpack://glimfse/webpack/runtime/compat get default export","webpack://glimfse/webpack/runtime/define property getters","webpack://glimfse/webpack/runtime/hasOwnProperty shorthand","webpack://glimfse/webpack/runtime/make namespace object","webpack://glimfse/./inc/support/modules/optimization/src/js/admin.js"],"sourcesContent":["module.exports = window[\"React\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * @package: \tGlimFSE Optimization\r\n * @author: \tZied Jridet\r\n * @license:\thttps://www.glimfse.com/\r\n * @version:\t1.0.0\r\n */\r\n\r\nconst {\r\n    i18n: {\r\n        __,\r\n    },\r\n    hooks: {\r\n        addFilter\r\n    },\r\n    components: {\r\n        Placeholder,\r\n        Card,\r\n        CardHeader,\r\n        CardBody,\r\n        Spinner,\r\n        Button,\r\n        TextControl,\r\n        TextareaControl,\r\n        BaseControl,\r\n        ColorPicker,\r\n        RangeControl,\r\n        DropdownMenu,\r\n        SelectControl,\r\n        ToggleControl,\r\n        ColorIndicator,\r\n        __experimentalHStack: HStack,\r\n        __experimentalNumberControl: NumberControl,\r\n        __experimentalBorderBoxControl: BorderBoxControl,\r\n    },\r\n    element: {\r\n        useState,\r\n    },\r\n    blockEditor: {\r\n        useSetting\r\n    },\r\n} = wp;\r\n\r\naddFilter('glimfse.admin.tabs.plugins', 'glimfse/optimization/admin/panel', optionsPanel);\r\nfunction optionsPanel(panels) {\r\n    return [...panels, {\r\n        name: 'wca-optimization',\r\n        title: __('Optimization'),\r\n        render: (props) => <Options {...props} />\r\n    }];\r\n}\r\n\r\nconst Options = (props) => {\r\n    const { settings, saveSettings, isRequesting, createNotice } = props;\r\n\r\n    if (isRequesting || !settings) {\r\n        return <Placeholder {...{\r\n            icon: <Spinner />,\r\n            label: __('Loading'),\r\n            instructions: __('Please wait, loading settings...', 'glimfse')\r\n        }} />;\r\n    }\r\n\r\n    const apiOptions = (({ optimization }) => (optimization))(settings);\r\n    const [loading, setLoading] = useState(null);\r\n    const [formData, setFormData] = useState(apiOptions);\r\n\r\n    const setHeaderOption = (option) => {\r\n        setFormData({ ...formData, header: { ...formData.header, ...option } });\r\n    }\r\n\r\n    const handleNotice = () => {\r\n        setLoading(false);\r\n\r\n        return createNotice('success', __('Settings saved.', 'glimfse'));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid\" style={{ '--wca--columns': 2 }}>\r\n                <div className=\"g-col-1\">\r\n                    <Card className=\"border shadow-none\">\r\n                        <CardHeader>\r\n                            <HStack>\r\n                                <h5 className=\"text-uppercase fw-medium m-0\">{__('Header', 'glimfse')}</h5>\r\n                                <ToggleControl\r\n                                    label={__('Clean Header?', 'glimfse')}\r\n                                    className=\"m-0\"\r\n                                    checked={formData?.header === true}\r\n                                    onChange={header => setFormData({ ...formData, header })}\r\n                                />\r\n                            </HStack>\r\n                        </CardHeader>\r\n                        <CardBody style={{ color: 'rgb(30, 30, 30)' }}>\r\n                            <p>\r\n                                <ToggleControl\r\n                                    label={__('WP Generator', 'glimfse')}\r\n                                    help={__('Remove WP Generator meta tag.', 'glimfse')}\r\n                                    checked={formData?.header?.wpGenerator || formData?.header === true}\r\n                                    disabled={formData?.header === true}\r\n                                    onChange={wpGenerator => setHeaderOption({ wpGenerator })}\r\n                                />\r\n                            </p>\r\n                            <p>\r\n                                <ToggleControl\r\n                                    label={__('RSD Link', 'glimfse')}\r\n                                    help={__('Remove Really Simple Discovery service endpoint.', 'glimfse')}\r\n                                    checked={formData?.header?.rsdLink || formData?.header === true}\r\n                                    disabled={formData?.header === true}\r\n                                    onChange={rsdLink => setHeaderOption({ rsdLink })}\r\n                                />\r\n                            </p>\r\n                            <p>\r\n                                <ToggleControl\r\n                                    label={__('Feed Links', 'glimfse')}\r\n                                    help={__('Remove the feed links.', 'glimfse')}\r\n                                    checked={formData?.header?.feedLinks || formData?.header === true}\r\n                                    disabled={formData?.header === true}\r\n                                    onChange={feedLinks => setHeaderOption({ feedLinks })}\r\n                                />\r\n                            </p>\r\n                            <p>\r\n                                <ToggleControl\r\n                                    label={__('Shortlink', 'glimfse')}\r\n                                    help={__('Remove the rel=shortlink.', 'glimfse')}\r\n                                    checked={formData?.header?.shortLink || formData?.header === true}\r\n                                    disabled={formData?.header === true}\r\n                                    onChange={shortLink => setHeaderOption({ shortLink })}\r\n                                />\r\n                            </p>\r\n                            <p>\r\n                                <ToggleControl\r\n                                    label={__('Rest API', 'glimfse')}\r\n                                    help={__('Remove the REST API link tag.', 'glimfse')}\r\n                                    checked={formData?.header?.restApi || formData?.header === true}\r\n                                    disabled={formData?.header === true}\r\n                                    onChange={restApi => setHeaderOption({ restApi })}\r\n                                />\r\n                            </p>\r\n                            <p>\r\n                                <ToggleControl\r\n                                    label={__('oEmbed', 'glimfse')}\r\n                                    help={__('Remove oEmbed discovery links.', 'glimfse')}\r\n                                    checked={formData?.header?.oEmbed || formData?.header === true}\r\n                                    disabled={formData?.header === true}\r\n                                    onChange={oEmbed => setHeaderOption({ oEmbed })}\r\n                                />\r\n                            </p>\r\n                            <p>\r\n                                <ToggleControl\r\n                                    label={__('Emoji', 'glimfse')}\r\n                                    help={__('Remove WP Emojis and fallback to browser`s emoji.', 'glimfse')}\r\n                                    checked={formData?.header?.emoji || formData?.header === true}\r\n                                    disabled={formData?.header === true}\r\n                                    onChange={emoji => setHeaderOption({ emoji })}\r\n                                />\r\n                            </p>\r\n                            <p>\r\n                                <ToggleControl\r\n                                    label={__('Dashicons CSS', 'glimfse')}\r\n                                    help={__('Remove Dashicons CSS in frontend.', 'glimfse')}\r\n                                    checked={formData?.header?.dashicons || formData?.header === true}\r\n                                    disabled={formData?.header === true}\r\n                                    onChange={dashicons => setHeaderOption({ dashicons })}\r\n                                />\r\n                            </p>\r\n                            <p>\r\n                                <ToggleControl\r\n                                    label={__('Default Scripts', 'glimfse')}\r\n                                    help={__('Move default scripts to footer.', 'glimfse')}\r\n                                    checked={formData?.header?.footerScripts || formData?.header === true}\r\n                                    disabled={formData?.header === true}\r\n                                    onChange={footerScripts => setHeaderOption({ footerScripts })}\r\n                                />\r\n                            </p>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"g-col-1\">\r\n                    <Card className=\"border shadow-none position-sticky sticky-top h-100\">\r\n                        <CardHeader>\r\n                            <h5 className=\"text-uppercase fw-medium m-0\">{__('Preloading', 'glimfse')}</h5>\r\n                        </CardHeader>\r\n                        <CardBody style={{ color: 'rgb(30, 30, 30)' }}>\r\n                            <p>\r\n                                <ToggleControl\r\n                                    label={__('Instant Page', 'glimfse')}\r\n                                    help={__('Automatically prefetch URLs in the background when a user hovers over a link.', 'glimfse')}\r\n                                    checked={formData?.preload?.instantPage}\r\n                                    onChange={instantPage => setFormData({ ...formData, preload: { ...formData.preload, instantPage } })}\r\n                                />\r\n                            </p>\r\n                            <p>\r\n                                <ToggleControl\r\n                                    label={__('Preload Viewport Media', 'glimfse')}\r\n                                    help={__('Automatically preload resources that are needed right away or very soon during a page load.', 'glimfse')}\r\n                                    checked={formData?.preload?.preloadViewport}\r\n                                    onChange={preloadViewport => setFormData({ ...formData, preload: { ...formData.preload, preloadViewport } })}\r\n                                />\r\n                            </p>\r\n                            <p>\r\n                                <TextareaControl\r\n                                    label={__('Preconnect', 'glimfse')}\r\n                                    help={__('Preconnect allows the browser to set up early connections before an HTTP request, eliminating round-trip latency and saving time for users. Format: https://example.com|crossorigin', 'glimfse')}\r\n                                    value={formData?.preload?.preconnect?.join('\\n')}\r\n                                    onChange={preconnect => {\r\n                                        const asArray = preconnect ? preconnect.split('\\n') : [];\r\n                                        setFormData({ ...formData, preload: { ...formData.preload, preconnect: asArray } });\r\n                                    }}\r\n                                />\r\n                            </p>\r\n                            <p>\r\n                                <TextareaControl\r\n                                    label={__('DNS Prefetch', 'glimfse')}\r\n                                    help={__('Resolve DNS before a user clicks - one per line. Format: //example.com', 'glimfse')}\r\n                                    value={formData?.preload?.dnsPrefetch?.join('\\n')}\r\n                                    onChange={dnsPrefetch => {\r\n                                        const asArray = dnsPrefetch ? dnsPrefetch.split('\\n') : [];\r\n                                        setFormData({ ...formData, preload: { ...formData.preload, dnsPrefetch: asArray } });\r\n                                    }}\r\n                                />\r\n                            </p>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <hr style={{ margin: '20px 0' }} />\r\n            <Button\r\n                className=\"button\"\r\n                isPrimary\r\n                isLarge\r\n                icon={loading && <Spinner />}\r\n                onClick={() => {\r\n                    setLoading(true);\r\n                    saveSettings({ optimization: formData }, handleNotice);\r\n                }}\r\n                {...{ disabled: loading }}\r\n            >\r\n                {loading ? '' : __('Save', 'glimfse')}\r\n            </Button>\r\n        </>\r\n    );\r\n};"],"names":["i18n","__","hooks","addFilter","components","Placeholder","Card","CardHeader","CardBody","Spinner","Button","TextControl","TextareaControl","BaseControl","ColorPicker","RangeControl","DropdownMenu","SelectControl","ToggleControl","ColorIndicator","__experimentalHStack","HStack","__experimentalNumberControl","NumberControl","__experimentalBorderBoxControl","BorderBoxControl","element","useState","blockEditor","useSetting","wp","optionsPanel","panels","name","title","render","props","createElement","Options","settings","saveSettings","isRequesting","createNotice","icon","label","instructions","apiOptions","optimization","loading","setLoading","formData","setFormData","setHeaderOption","option","header","handleNotice","Fragment","className","style","checked","onChange","color","help","wpGenerator","disabled","rsdLink","feedLinks","shortLink","restApi","oEmbed","emoji","dashicons","footerScripts","preload","instantPage","preloadViewport","value","preconnect","join","asArray","split","dnsPrefetch","margin","isPrimary","isLarge","onClick"],"sourceRoot":""}